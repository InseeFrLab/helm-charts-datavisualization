superset:
  init:
    adminUser:
      username: admin
      firstname: Superset
      lastname: Admin
      email: admin@superset.com
      password: admin
    initscript: |-
      #!/bin/sh
      set -eu
      echo "Upgrading DB schema..."
      superset db upgrade
      echo "Initializing roles..."
      superset init
      {{ if .Values.init.createAdmin }}
      echo "Creating admin user..."
      superset fab create-admin \
                      --username {{ .Values.init.adminUser.username }} \
                      --firstname {{ .Values.init.adminUser.firstname }} \
                      --lastname {{ .Values.init.adminUser.lastname }} \
                      --email {{ .Values.init.adminUser.email }} \
                      --password {{ .Values.init.adminUser.password }} \
                      || true
      {{- end }}
      {{ if .Values.init.loadExamples }}
      echo "Loading examples..."
      superset load_examples
      {{- end }}
      if [ -f "{{ .Values.extraConfigMountPath }}/import_datasources.yaml" ]; then
        if [ -s "{{ .Values.extraConfigMountPath }}/import_datasources.yaml" ]; then
          echo "Importing database connections.... "
          superset import_datasources -p {{ .Values.extraConfigMountPath }}/import_datasources.yaml
        fi
      fi

  configOverrides:
    secret: |
      SECRET_KEY = {{ .Values.init.adminUser.password | quote }}

  bootstrapScript: |
    #!/bin/bash
    pip install \
      duckdb-engine \
      psycopg2-binary \
      sqlalchemy-trino \
      PyHive \
      elasticsearch-dbapi \
      redis && \
    if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid {{ .Values.runAsUser }}" > ~/bootstrap; fi

  extraConfigs:
    import_datasources.yaml: |
      {{ include "superset.discovery" . }}

  discovery:
    hive: true
    mongodb: true
    postgres: true
    elastic: true
    trino: true
    sparkThriftServer: true

  supersetNode:
    connections:
      db_host: superset-db

  postgresql:
    fullnameOverride: "superset-db"

ingress:
  enabled: false
#  ingressClassName: ""
  tls: true
  annotations: []
    # kubernetes.io/tls-acme: "true"
  hostname: chart-example.local
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  useCertManager: false
  certManagerClusterIssuer: ""

userPreferences:
  language: "en"